package main

import (
	"context"

	"github.com/google/uuid"
)

//
//                                                                       ||
//                                                     __..--".          ||
//                                    __..--""`._..--"" . . . .`.        ||
//                            __..--"". . . . . . .`. . . . . . .`.      ||
//                    __..--"". . . . .`. . . . . . .`. . . . . . .`.   //
//            __..--"". . `.  . . . . . .`. . . . . . .`. . . . . . .`.//
//     _..--""  . . . . . . `.  . . . . . .`. . . . . . .`. . . . . . .||
//   :". . . .`.  . . . . . . `.  . . . . . .`. . . . . . .`. . . . . .||`.
//   `:. . . . .`.  . . . . . . `.  . . . . . .`. . . . . . .`. . . . .||__>
//     `:. . . . .`.  . . . . . . `.  . . . . . .`. . . . . . .`.__..-o||
//       `:. . . . .`.  . . . . . . `.  . . . . . .`. . . . .`;Y"->.  ""
//         `:. . . . .`.  . . . . . . `.  . . . . . .`. . . __.>.:'
//           `:. . . . .`.  . . . . . . `.  . . . . __..--"" ..+"`.	                        BEEP!
//      _..-._ `:. . . . .`.  . . . . . . `.__..--"" ....:::::.|   `.
//    ."`` \_--" >:. . . . .`.  . . __..,-|" . ..::::::::::::::`--""-:.
//   ' ..`\J.-  "8-`:. . .  __..--"" ...-I  \ `. `::::::::::::::::::::".
//   `/'\\88o. ,O \  `:.--""....:|:::'''`'\ ='. }-._'::::::::::::::::::|
//   8  8|PP|"(:. \-" ""`:::::::|:::.((::='/ .\""-.:_ ':::::::::::''_.'  _..
//    8  8|::/ \`::Y  _____`:::::|::::.\\[ .\ "/"..* *"-. '''__..--"")\,"".-.\_
//   `\b d/""===\==V::.--..__`:::|:::::.|,'*."".:.. "_-.*`.""    _.-"-""\? "_=``.
//   \\`".`"' .: :-.::.        `:|:::.'.'*.' __..--""   `.*`:--"".-"?,  .)=""`\ \\
//    `.``...''_/   ``::      _\\--.'.'*.'-""   _..-._ _..>.*;-""@_.-/-" `\.-"""-.\
//      `-::--"            .-"@"}.'.'*.:)     ."\` \ \`.--'_`-'     `\. \-'-""-   `.
//                        <\  _...'*.'      .' \.`\ `\ \\""         `\ `' ' .-.\   |
//                        _\"" .---'        -\. `\.-"""-.\           \`|    ._)/   '
//                      ."\.`-"\`.         `\. \-'-""-   `.           \\  `---"   /
//                    .' \.`\ `\ \\        `\ `' ' .-.\   |            `.       _/
//                    -\. `\.-"""-.\        \`|    ._)/   '              `-..--"
//                   `\. \-'-""-   `.        \\  `---"   /
//                   `\ `' ' .-.\   |         `.       _/
//                    \`|    ._)/   '           `-..--"
//                     \\  `---"   /
//                      `.       _/
//                        `-..--"
//

// contextWithTraceIdEtc returns a derived context with a faked 'request-scoped' information.
func contextWithTraceIdEtc(ctx context.Context) context.Context {
	foo := make(map[string]interface{})
	foo["requestPath"] = "/loggin/v1/foos"
	foo["scheme"] = "HTTPS"
	foo["method"] = "POST"

	ctx = context.WithValue(ctx, "correlationId", uuid.NewString())
	ctx = context.WithValue(ctx, "magic_key", foo)

	return ctx
}
